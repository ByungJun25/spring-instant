# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Create release

on:
  workflow_dispatch:
    inputs:
      prefix:
        description: 'prefix for release (ie. rc)'
        required: true
        default: 'v'
      version:
        description: 'version for release (ie. 1.0.0)'
        required: true
        default: '0.0.1'

jobs:
  validate-version:
    name: validate version
    runs-on: ubuntu-latest
    steps:
      - name: echo start validating version
        run: echo Starting validating version
      
      - name: Checkout code
        uses: actions/checkout@v2

      - id: extract-project-version
        run: echo "::set-output name=project-version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)"
        shell: bash
      
      - name: validate version
        if: ${{ github.event.inputs.version != steps.extract-project-version.outputs.project-version }}
        run: exit 1

  create-release:
    needs: validate-version
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: echo create release job start
        run: echo create release job start

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.event.inputs.prefix }}${{ github.event.inputs.version }}
          release_name: ðŸŽ‰ Release ${{ github.event.inputs.prefix }}${{ github.event.inputs.version }}
          body: |
            ðŸŽ‰ Release ${{ github.event.inputs.prefix }}${{ github.event.inputs.version }}
          draft: false
          prerelease: false

  build-deploy:
    needs: [validate-version, create-release]
    name: deploy GitHub Maven Package
    runs-on: ubuntu-latest

    steps:
      - name: echo build and deploy job start
        run: echo build and deploy job start

      - name: code check out
        uses: actions/checkout@v2

      - name: Set up Java for publishing to Maven Central Repository
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

      - name: Publish to the Maven Central Repository
        run: mvn --batch-mode deploy -Possrh
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Set up Java for publishing to GitHub Packages
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Publish to GitHub Packages Apache Maven
        run: mvn --batch-mode deploy -Pgithub
        env:
          GITHUB_TOKEN: ${{ github.token }}